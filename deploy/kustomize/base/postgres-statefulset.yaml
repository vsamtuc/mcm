apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres-hl
  replicas: 1
  selector:
    matchLabels: { app.kubernetes.io/name: postgres }
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/component: db
    spec:
      securityContext:
        runAsNonRoot: true
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:17-alpine
          ports: [{ name: pg, containerPort: 5432 }]
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-superuser
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - { name: data, mountPath: /var/lib/postgresql/data }
            - { name: initdb, mountPath: /docker-entrypoint-initdb.d }
          readinessProbe:
            exec: { command: ["sh","-c","pg_isready -U postgres -d postgres"] }
          livenessProbe:
            exec: { command: ["sh","-c","pg_isready -U postgres -d postgres"] }
      volumes:
        - name: initdb
          configMap:
            name: initdb-sql
  volumeClaimTemplates:
    - metadata: { name: data }
      spec:
        accessModes: ["ReadWriteOnce"]
        resources: { requests: { storage: 10Gi } }
